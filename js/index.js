let arrCode = [
    '# "use strict"; <br> <span style="color: rgb(0, 43, 0);">- строгий режим</span>',
    '# let nameOfVariable = 25; <br> <span style="color: rgb(0, 43, 0);">- переменная</span>',
    '# const nameOfConstanta = "notChange"; <br> <span style="color: rgb(0, 43, 0);">- константа</span>',
    '# let nameOfArray = ["one", "two", 3]; <br> <span style="color: rgb(0, 43, 0);">- массив</span>',
    '# let nameOfObject = {one : "one", two : "two", three : 3}; <br> <span style="color: rgb(0, 43, 0);">- объект</span>',
    '# function nameOfFunction(dataOne, dataTwo){}; <br> <span style="color: rgb(0, 43, 0);">- функция </span>',
    '# let func = (dataOne, dataTwo) => {}; <br> <span style="color: rgb(0, 43, 0);">- стрелочная функция</span>',
    '# element.setAttribute("onclick", "func()"); <br> <span style="color: rgb(0, 43, 0);">- добавить атрибут</span>',
    '# element.removeAttribute("disabled", "disabled"); <br> <span style="color: rgb(0, 43, 0);">- удалить атрибут</span>',
    '# if (name == "one"){<br># &emsp;&emsp;Выполнится этот код.<br># } else {<br># &emsp;&emsp;Или этот код.<br># }; <br> <span style="color: rgb(0, 43, 0);">- выбор</span>',
    '# switch(data){<br>#  &emsp;&emsp;case 4:<br>#  &emsp;&emsp;&emsp;&emsp;Выполнится этот код.<br>#  &emsp;&emsp;break;<br>#  &emsp;&emsp;default;<br>#  }; <br> <span style="color: rgb(0, 43, 0);">- выбор</span>',
    '# let nameOfVariable = 21 > 18 ? true : false; <br> <span style="color: rgb(0, 43, 0);">- короткая запись if else</span>',
    '# for (let i = 0; i < 10; i++) {}; <br> <span style="color: rgb(0, 43, 0);">- цикл</span>',
    '# for (let i in person) { <br># &emsp;&emsp;data += person[i]; <br># }; <br> <span style="color: rgb(0, 43, 0);">- цикл for in</span>',
    '# document.querySelectorAll(".classCSS"); <br> <span style="color: rgb(0, 43, 0);">- получить элемент по классу</span>',
    '# document.querySelector("#idCSS"); <br> <span style="color: rgb(0, 43, 0);">- получить элемент по ID</span>',
    '# console.log("Данные выводимые в консоль"); <br> <span style="color: rgb(0, 43, 0);">- вывести лог в консоль</span>',
    '# let packData = new Error().stack; <br> <span style="color: rgb(0, 43, 0);">- получить данные о выполненой операции</span>',
    '# window.close(); <br> <span style="color: rgb(0, 43, 0);">- закрыть страницу</span>',
    '# window.open("www.adress.ru"); <br> <span style="color: rgb(0, 43, 0);">- открыть страницу</span>',
    '# String(data); <br> <span style="color: rgb(0, 43, 0);">- преобразует в строку</span>',
    '# Number(data); <br> <span style="color: rgb(0, 43, 0);">- преобразует в число</span>',
    '# element.classList.add("class"); <br> <span style="color: rgb(0, 43, 0);">- добавить класс</span>',
    '# element.classList.remove("class"); <br> <span style="color: rgb(0, 43, 0);">- удалить класс</span>',
    '# element.classList.toogle("class"); <br> <span style="color: rgb(0, 43, 0);">- сменить класс</span>',
    '# num.toFixed(0); <br> <span style="color: rgb(0, 43, 0);">- округлить до целого с числами после запятой</span>',
    '# arr.includes(777); <br> <span style="color: rgb(0, 43, 0);">- проверяет наличие элемента в массиве</span>',
    '# arr.join(", "); <br> <span style="color: rgb(0, 43, 0);">- преобразовать массив в строку с разделителем</span>',
    '# str.trim(); <br> <span style="color: rgb(0, 43, 0);">- удалить пробелы в начале и конце строки</span>',
    '# str.split(","); <br> <span style="color: rgb(0, 43, 0);">- разбить строку в массив по символу разделителю</span>',
    '# if(checkbox.checked == true); <br> <span style="color: rgb(0, 43, 0);">- проверка чекбокса</span>',
    '# if(select.selectedIndex == 1); <br> <span style="color: rgb(0, 43, 0);">- проверка элемента списка</span>',
    '# window.scrollBy({top: -10000}); <br> <span style="color: rgb(0, 43, 0);">- прокрутить вверх</span>',
    '# Math.floor(Math.random() * (max <br> <span style="color: rgb(0, 43, 0);">- min)) + min; <br> <span style="color: rgb(0, 43, 0);">- рандомное число</span>',
    '# document.querySelector("#id").innerHTML; <br> <span style="color: rgb(0, 43, 0);">- вставить контент</span>',
    '# localStorage.setItem("test", 1); <br> <span style="color: rgb(0, 43, 0);">- записать в локальное хранилище</span>',
    '# const location = window.location.href; <br> <span style="color: rgb(0, 43, 0);">- получить URL</span>',
    '# localStorage.getItem("test"); <br> <span style="color: rgb(0, 43, 0);">- получить из локального хранилища</span>',
    '# const screenWidth = window.screen.width; / height; <br> <span style="color: rgb(0, 43, 0);">- получить высоту и ширину окна</span>',
    '# color: hsla(9, 100%, 64%, 1); <br> <span style="color: rgb(0, 43, 0);">- цвет текста</span>',
    '# background-color: black; <br> <span style="color: rgb(0, 43, 0);">- Цвет фона</span>',
    '# background-image: url("img_tree.png"); <br> <span style="color: rgb(0, 43, 0);">- Изображение фона</span>',
    '# background-repeat: no-repeat; <br> <span style="color: rgb(0, 43, 0);">- Повторение фона</span>',
    '# border: 5px solid red; <br> <span style="color: rgb(0, 43, 0);">- Сокращенная форма объявления границы</span>',
    '# margin: 100px 150px 100px 80px; <br> <span style="color: rgb(0, 43, 0);">- Внешние отступы со всех сторон начиная с верхнего</span>',
    '# padding: 25px 50px 75px 100px; <br> <span style="color: rgb(0, 43, 0);">- Внутренние отступы со всех сторон начиная с верхнего</span>',
    '# width: 50%; <br> <span style="color: rgb(0, 43, 0);">- Ширина</span>',
    '# height: 200px; <br> <span style="color: rgb(0, 43, 0);">- Высота</span>',
    '# min-width: 500px; <br> <span style="color: rgb(0, 43, 0);">- Минимальная ширина</span>',
    '# max-width: 500px; <br> <span style="color: rgb(0, 43, 0);">- Максимальная ширина</span>',
    '# text-decoration: none; <br> <span style="color: rgb(0, 43, 0);">- Без декораций</span>',
    '# text-decoration: underline; <br> <span style="color: rgb(0, 43, 0);">- Подчеркивание снизу</span>',
    '# line-height: 0.8; <br> <span style="color: rgb(0, 43, 0);">- Отступ между строк</span>',
    '# text-shadow: 3px 2px 5px red; <br> <span style="color: rgb(0, 43, 0);">- Тень текста</span>',
    '# font-size: 40px; <br> <span style="color: rgb(0, 43, 0);">- Размер шрифта</span>',
    '# font-weight: bold; <br> <span style="color: rgb(0, 43, 0);">- Жирный шрифт</span>',
    '# font-family: "Times New Roman", Times, serif; <br> <span style="color: rgb(0, 43, 0);">- Установить шрифт</span>',
    '# @font-face {<br># &emsp;&emsp;font-family: "nameFont";<br># &emsp;&emsp;src: url("nameFontFile.ttf");<br># } <br> <span style="color: rgb(0, 43, 0);">- Подключить свой шрифт</span>',
    '# display: inline; <br> <span style="color: rgb(0, 43, 0);">- Элементы в линию</span>',
    '# display: inline-block; <br> <span style="color: rgb(0, 43, 0);">- Элемент в линию с увеличением по вертикали как блок</span>',
    '# display: block; <br> <span style="color: rgb(0, 43, 0);">- Элементы блоком</span>',
    '# display: none; <br> <span style="color: rgb(0, 43, 0);">- Не отображать элемент</span>',
    '# visibility: hidden; <br> <span style="color: rgb(0, 43, 0);">- Скрыть элемент с сохранением пространства</span>',
    '# position: static; <br> <span style="color: rgb(0, 43, 0);">- Обычное позиционирование</span>',
    '# position: relative;  <br> <span style="color: rgb(0, 43, 0);">- Позиция относительно родительского объекта (относительное)</span>',
    '# position: fixed; <br> <span style="color: rgb(0, 43, 0);">- Фиксированная позиция на экране</span>',
    '# bottom: 0; <br># right: 0; <br># left: 0; <br># top: 0; <br> <span style="color: rgb(0, 43, 0);">- Расстояние от края экрана для позиций fixed и absolute</span>',
    '# position: absolute; <br> <span style="color: rgb(0, 43, 0);">- Абсолютная позиция относительно родительского элемента с относительной позицией</span>',
    '# position: sticky; <br> <span style="color: rgb(0, 43, 0);">- Прилепить к верху экрана</span>',
    '# overflow: hidden; <br> <span style="color: rgb(0, 43, 0);">- Контент не вылезает за пределы окна, полоса прокрутки скрыта</span>',
    '# overflow: scroll; <br> <span style="color: rgb(0, 43, 0);">- Полоса прокрутки отображается</span>',
    '# overflow-x: scroll; <br> <span style="color: rgb(0, 43, 0);">- Горизонтальная полоса прокрутки</span>',
    '# left: 50%; <br># transform: translate(-50%, 0); <br> <span style="color: rgb(0, 43, 0);">- Выравнивание блока с позицией absolute по центру</span>',
    '# div p {background-color: yellow;} <br> <span style="color: rgb(0, 43, 0);">- Выбирает элемент р находящийся внутри элемента div</span>',
    '# div + p {background-color: yellow;} <br> <span style="color: rgb(0, 43, 0);">- Первый элемент р после элемента div</span>',
    '# div ~ p {background-color: yellow;} <br> <span style="color: rgb(0, 43, 0);">- Все элементы р после элемента div</span>',
    '# p:first-child {color: blue;} <br> <span style="color: rgb(0, 43, 0);">- Первый элемент р</span>',
    '# p i:first-child {color: blue;} <br> <span style="color: rgb(0, 43, 0);">- Первый элемент i внутри элементов p</span>',
    '# p:first-child i {color: blue;} <br> <span style="color: rgb(0, 43, 0);">- Все элементы i внутри первого элемента p</span>',
    '# opacity: 0.5; <br> <span style="color: rgb(0, 43, 0);">- Прозрачность элемента от 0 до 1</span>',
    '# input[type=text] {width: 100%;} <br> <span style="color: rgb(0, 43, 0);">- Выбрать input с типом text</span>',
    '# input[type=text]:focus {background-color: lightblue;} <br> <span style="color: rgb(0, 43, 0);">- Выбранный input</span>',
    '# resize: none; <br> <span style="color: rgb(0, 43, 0);">- Запретить изменение размера textarea.</span>',
    '# vh <br> <span style="color: rgb(0, 43, 0);">- % от размера экрана</span>',
    '# border-radius: 25px 25px 25px 25px; <br> <span style="color: rgb(0, 43, 0);">- Все четыре стороны слева на право</span>',
    '# box-shadow: 10px 10px 5px grey; <br> <span style="color: rgb(0, 43, 0);">- Тень для блока</span>',
    '# object-fit: cover; <br> <span style="color: rgb(0, 43, 0);">- Вмещает фотографию в размер бокса</span>',
    '# resize: horizontal; <br> <span style="color: rgb(0, 43, 0);">- Изменять горизонтально</span>',
    '# resize: vertical; <br> <span style="color: rgb(0, 43, 0);">- Изменять вертикально</span>',
    '# @media screen and (max-width: 600px) {} <br> <span style="color: rgb(0, 43, 0);">- Если экран меньше или равен 600 пикселей</span>',
    '# &lt;html lang="ru-RU"></html> <br> <span style="color: rgb(0, 43, 0);">- Основной тег документа и объявление языка и страны (ru - язык; RU - страна)</span>',
    '# &lt;!DOCTYPE html> <br> <span style="color: rgb(0, 43, 0);">- Объявление версии документа HTML5</span>',
    '# &lt;meta charset="UTF-8"> <br> <span style="color: rgb(0, 43, 0);">- Объявление кодировки страницы</span>',
    '# &lt;meta name="discription" content="Learn HTML"> <br> <span style="color: rgb(0, 43, 0);">- Описание страницы</span>',
    '# &lt;meta name="keywords" content="HTML"> <br> <span style="color: rgb(0, 43, 0);">- Ключевые слова для поисковых роботов</span>',
    '# &lt;input type="text"> <br> <span style="color: rgb(0, 43, 0);">- Текстовое поле</span>',
    '# maxlength="" <br> <span style="color: rgb(0, 43, 0);">- Атрибут инпута, максимальная длина текста в поле</span>',

];

function showLine(){
    let block = document.querySelectorAll('.main-block');

    block[0].innerHTML += '<div class="message">' + arrCode[Math.floor(Math.random() * (arrCode.length - 0)) + 0] + '</div>';
    window.scrollBy({top: 10000});

}

setInterval(showLine, 5000);